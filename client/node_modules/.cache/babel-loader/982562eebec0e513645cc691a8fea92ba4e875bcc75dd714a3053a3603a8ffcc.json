{"ast":null,"code":"import CardVue from \"./CardVue.vue\";\nexport default {\n  name: \"chart-card\",\n  components: {\n    CardVue\n  },\n  props: {\n    chartType: {\n      type: String,\n      default: \"Line\" // Line | Pie | Bar\n    },\n\n    chartOptions: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    chartData: {\n      type: Object,\n      default: () => {\n        return {\n          labels: [],\n          series: []\n        };\n      }\n    },\n    responsiveOptions: [Object, Array]\n  },\n  data() {\n    return {\n      chartId: \"no-id\",\n      $Chartist: null,\n      chart: null\n    };\n  },\n  methods: {\n    /***\n     * Initializes the chart by merging the chart options sent via props and the default chart options\n     */\n    initChart() {\n      var chartIdQuery = `#${this.chartId}`;\n      this.CardVueVue = this.$Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions, this.responsiveOptions);\n      this.$emit(\"initialized\", this.chart);\n      if (this.chartType === \"Line\") {\n        this.animateLineChart();\n      }\n      if (this.chartType === \"Bar\") {\n        this.animateBarChart();\n      }\n    },\n    /***\n     * Assigns a random id to the chart\n     */\n    updateChartId() {\n      const currentTime = new Date().getTime().toString();\n      const randomInt = this.getRandomInt(0, currentTime);\n      this.chartId = `div_${randomInt}`;\n    },\n    getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n    animateLineChart() {\n      let seq = 0;\n      let durations = 500;\n      let delays = 80;\n      this.CardVue.on(\"draw\", data => {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: this.$Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          seq++;\n          data.element.animate({\n            opacity: {\n              begin: seq * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      });\n      seq = 0;\n    },\n    animateBarChart() {\n      let seq = 0;\n      let durations = 500;\n      let delays = 80;\n      this.CardVue.on(\"draw\", data => {\n        if (data.type === \"bar\") {\n          seq++;\n          data.element.animate({\n            opacity: {\n              begin: seq * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      });\n    }\n  },\n  async mounted() {\n    this.updateChartId();\n    const Chartist = await import(\"chartist\");\n    this.$Chartist = Chartist.default || Chartist;\n    this.initChart();\n  }\n};","map":{"version":3,"names":["CardVue","name","components","props","chartType","type","String","default","chartOptions","Object","chartData","labels","series","responsiveOptions","Array","data","chartId","$Chartist","chart","methods","initChart","chartIdQuery","CardVueVue","$emit","animateLineChart","animateBarChart","updateChartId","currentTime","Date","getTime","toString","randomInt","getRandomInt","min","max","Math","floor","random","seq","durations","delays","on","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","mounted","Chartist"],"sources":["D:\\WEB\\Servicios\\Proyecto Final\\client\\src\\components\\Cards\\ChartCard.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\" v-if=\"$slots.header\">\n      <slot name=\"header\"></slot>\n    </div>\n    <div class=\"card-body\">\n      <div :id=\"chartId\" class=\"ct-chart\"></div>\n    </div>\n    <div class=\"card-footer\" v-if=\"$slots.footer\">\n      <slot name=\"footer\"></slot>\n    </div>\n  </div>\n</template>\n<script>\nimport CardVue from \"./CardVue.vue\";\n\nexport default {\n  name: \"chart-card\",\n  components: {\n    CardVue,\n  },\n  props: {\n    chartType: {\n      type: String,\n      default: \"Line\", // Line | Pie | Bar\n    },\n    chartOptions: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    chartData: {\n      type: Object,\n      default: () => {\n        return {\n          labels: [],\n          series: [],\n        };\n      },\n    },\n    responsiveOptions: [Object, Array],\n  },\n  data() {\n    return {\n      chartId: \"no-id\",\n      $Chartist: null,\n      chart: null,\n    };\n  },\n  methods: {\n    /***\n     * Initializes the chart by merging the chart options sent via props and the default chart options\n     */\n    initChart() {\n      var chartIdQuery = `#${this.chartId}`;\n      this.CardVueVue = this.$Chartist[this.chartType](\n        chartIdQuery,\n        this.chartData,\n        this.chartOptions,\n        this.responsiveOptions\n      );\n      this.$emit(\"initialized\", this.chart);\n      if (this.chartType === \"Line\") {\n        this.animateLineChart();\n      }\n      if (this.chartType === \"Bar\") {\n        this.animateBarChart();\n      }\n    },\n    /***\n     * Assigns a random id to the chart\n     */\n    updateChartId() {\n      const currentTime = new Date().getTime().toString();\n      const randomInt = this.getRandomInt(0, currentTime);\n      this.chartId = `div_${randomInt}`;\n    },\n    getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n    animateLineChart() {\n      let seq = 0;\n      let durations = 500;\n      let delays = 80;\n      this.CardVue.on(\"draw\", (data) => {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path\n                .clone()\n                .scale(1, 0)\n                .translate(0, data.chartRect.height())\n                .stringify(),\n              to: data.path.clone().stringify(),\n              easing: this.$Chartist.Svg.Easing.easeOutQuint,\n            },\n          });\n        } else if (data.type === \"point\") {\n          seq++;\n          data.element.animate({\n            opacity: {\n              begin: seq * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\",\n            },\n          });\n        }\n      });\n      seq = 0;\n    },\n    animateBarChart() {\n      let seq = 0;\n      let durations = 500;\n      let delays = 80;\n      this.CardVue.on(\"draw\", (data) => {\n        if (data.type === \"bar\") {\n          seq++;\n          data.element.animate({\n            opacity: {\n              begin: seq * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\",\n            },\n          });\n        }\n      });\n    },\n  },\n  async mounted() {\n    this.updateChartId();\n    const Chartist = await import(\"chartist\");\n    this.$Chartist = Chartist.default || Chartist;\n    this.initChart();\n  },\n};\n</script>\n<style></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}