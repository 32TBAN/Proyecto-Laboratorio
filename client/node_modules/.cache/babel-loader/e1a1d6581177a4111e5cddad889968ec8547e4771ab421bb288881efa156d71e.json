{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  name: \"RegistroLab\",\n  data() {\n    return {\n      cedula: \"\",\n      nombre: \"\",\n      apellido: \"\",\n      genero: \"\",\n      edad: \"\",\n      examen: \"\",\n      baseURL: \"http://localhost:3000\",\n      siExiste: false\n    };\n  },\n  methods: {\n    registrar() {\n      const paciente = {\n        _id: this.cedula,\n        Nombre: this.nombre,\n        Apellido: this.apellido,\n        Genero: this.genero,\n        FechaNac: this.edad\n      };\n      var hoy = new Date();\n      const examen = {\n        CedulaPaciente: this.cedula,\n        Revisado: false,\n        FechaInicio: hoy\n      };\n      if (!this.siExiste) {\n        fetch(`${this.baseURL}/crearPaciente`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(paciente)\n        }).then(res => res.json()).then(nuevoPaciente => {\n          // Aquí puedes realizar alguna acción con la respuesta del backend\n          console.log(\"Nuevo paciente creado:\", nuevoPaciente);\n        }).catch(error => {\n          console.error(\"Error al crear el paciente:\", error);\n        });\n      }\n      fetch(`${this.baseURL}/crearExamen`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(examen)\n      }).then(res => res.json()).then(nuevoExamen => {\n        // Aquí puedes realizar alguna acción con la respuesta del backend\n        console.log(\"Nuevo examen creado:\", nuevoExamen);\n      }).catch(error => {\n        console.error(\"Error al crear el examen:\", error);\n      });\n      this.cedula = \"\";\n      this.apellido = \"\";\n      this.genero.value = \"\";\n      this.edad = \"\";\n      this.examen.value = \"\";\n    },\n    existe() {\n      fetch(`${this.baseURL}/buscarPaciente/${this.cedula}`).then(res => {\n        if (res.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Error respuesta\");\n        }\n      }).then(pacienteX => {\n        this.cedula = pacienteX._id;\n        this.nombre = pacienteX.Nombre;\n        this.apellido = pacienteX.Apellido;\n        this.genero = pacienteX.Genero;\n        this.edad = pacienteX.FechaNac;\n        this.siExiste = true;\n      }).catch(error => {\n        console.error(\"Error al encontrar el paciente:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","cedula","nombre","apellido","genero","edad","examen","baseURL","siExiste","methods","registrar","paciente","_id","Nombre","Apellido","Genero","FechaNac","hoy","Date","CedulaPaciente","Revisado","FechaInicio","fetch","method","headers","body","JSON","stringify","then","res","json","nuevoPaciente","console","log","catch","error","nuevoExamen","value","existe","ok","response","Error","pacienteX"],"sources":["D:\\WEB\\Servicios\\Proyecto Final\\client\\src\\components\\RegistroCliente.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Registro de Laboratorio Clínico</h2>\r\n\r\n    <form @submit.prevent=\"registrar\">\r\n      <label for=\"cedula\">Cedula:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"cedula\"\r\n        v-model=\"cedula\"\r\n        maxlength=\"10\"\r\n        required\r\n        @input=\"existe\"\r\n      />\r\n\r\n      <label for=\"nombre\">Nombre:</label>\r\n      <input type=\"text\" id=\"nombre\" v-model=\"nombre\" required />\r\n\r\n      <label for=\"apellido\">Apellido:</label>\r\n      <input type=\"text\" id=\"apellido\" v-model=\"apellido\" required />\r\n\r\n      <label for=\"genero\">Genero:</label>\r\n      <select id=\"genero\" v-model=\"genero\" required>\r\n        <option value=\"\">Seleccione un genero</option>\r\n        <option value=\"M\">Masculino</option>\r\n        <option value=\"F\">Femenino</option>\r\n      </select>\r\n\r\n      <label for=\"edad\">Fecha de nacimiento:</label>\r\n      <input type=\"date\" id=\"edad\" v-model=\"edad\" required />\r\n\r\n      <label for=\"examen\">Examen:</label>\r\n      <select id=\"examen\" v-model=\"examen\" required>\r\n        <option value=\"\">Seleccione un examen</option>\r\n        <option value=\"Covid\">Covid</option>\r\n        <option value=\"Antígenos\">Antígenos</option>\r\n        <option value=\"Hisopado\">Hisopado</option>\r\n        <option value=\"Examen X\">Examen X</option>\r\n        <option value=\"Examen Y\">Examen Y</option>\r\n      </select>\r\n\r\n      <br />\r\n      <button type=\"submit\">Registrar</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"RegistroLab\",\r\n  data() {\r\n    return {\r\n      cedula: \"\",\r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      genero: \"\",\r\n      edad: \"\",\r\n      examen: \"\",\r\n      baseURL: \"http://localhost:3000\",\r\n      siExiste: false,\r\n    };\r\n  },\r\n  methods: {\r\n    registrar() {\r\n      const paciente = {\r\n        _id: this.cedula,\r\n        Nombre: this.nombre,\r\n        Apellido: this.apellido,\r\n        Genero: this.genero,\r\n        FechaNac: this.edad,\r\n      };\r\n\r\n      var hoy = new Date();\r\n      const examen = {\r\n        CedulaPaciente: this.cedula,\r\n        Revisado: false,\r\n        FechaInicio: hoy,\r\n      };\r\n\r\n      if (!this.siExiste) {\r\n        fetch(`${this.baseURL}/crearPaciente`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(paciente),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((nuevoPaciente) => {\r\n            // Aquí puedes realizar alguna acción con la respuesta del backend\r\n            console.log(\"Nuevo paciente creado:\", nuevoPaciente);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error al crear el paciente:\", error);\r\n          });\r\n      }\r\n\r\n      fetch(`${this.baseURL}/crearExamen`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(examen),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((nuevoExamen) => {\r\n          // Aquí puedes realizar alguna acción con la respuesta del backend\r\n          console.log(\"Nuevo examen creado:\", nuevoExamen);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error al crear el examen:\", error);\r\n        });\r\n\r\n      this.cedula = \"\";\r\n      this.apellido = \"\";\r\n      this.genero.value = \"\";\r\n      this.edad = \"\";\r\n      this.examen.value = \"\";\r\n    },\r\n    existe() {\r\n      fetch(`${this.baseURL}/buscarPaciente/${this.cedula}`)\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            return response.json();\r\n          } else {\r\n            throw new Error(\"Error respuesta\");\r\n          }\r\n        })\r\n        .then((pacienteX) => {\r\n          this.cedula = pacienteX._id;\r\n          this.nombre = pacienteX.Nombre;\r\n          this.apellido = pacienteX.Apellido;\r\n          this.genero = pacienteX.Genero;\r\n          this.edad = pacienteX.FechaNac;\r\n          this.siExiste = true;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error al encontrar el paciente:\", error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  font-size: 24px;\r\n  margin-bottom: 16px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n}\r\ninput,\r\nselect {\r\n  margin-bottom: 16px;\r\n}\r\nbutton {\r\n  background-color: #3490dc;\r\n  color: #fff;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  margin-bottom: 8px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}