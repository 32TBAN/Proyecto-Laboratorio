{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createBlock as _createBlock, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"NotificationsHechas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_notification = _resolveComponent(\"notification\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_TransitionGroup, {\n    name: $props.transitionName,\n    mode: $props.transitionMode\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.NotificationsHechas, notification => {\n      return _openBlock(), _createBlock(_component_notification, _mergeProps(notification, {\n        clickHandler: notification.onClick,\n        key: notification.timestamp.getTime(),\n        onClose: $options.removeNotification\n      }), null, 16 /* FULL_PROPS */, [\"clickHandler\", \"onClose\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"name\", \"mode\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_TransitionGroup","name","$props","transitionName","mode","transitionMode","_Fragment","_renderList","$data","NotificationsHechas","notification","_createBlock","_component_notification","_mergeProps","clickHandler","onClick","key","timestamp","getTime","onClose","$options","removeNotification"],"sources":["D:\\WEB\\Servicios\\Proyecto Final\\client\\src\\components\\NotificationPlugin\\Notifications.vue"],"sourcesContent":["<template>\n  <div class=\"NotificationsHechas\">\n    <transition-group :name=\"transitionName\"\n                      :mode=\"transitionMode\">\n      <notification\n        v-for=\"notification in NotificationsHechas\"\n        v-bind=\"notification\"\n        :clickHandler=\"notification.onClick\"\n        :key=\"notification.timestamp.getTime()\"\n        @close=\"removeNotification\">\n      </notification>\n    </transition-group>\n  </div>\n</template>\n<script>\nimport Notification from './Notification.vue';\n\nexport default {\n  components: {\n    Notification\n  },\n  props: {\n    transitionName: {\n      type: String,\n      default: 'list'\n    },\n    transitionMode: {\n      type: String,\n      default: 'in-out'\n    },\n    overlap: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      NotificationsHechas: this.$NotificationsHechas.state\n    };\n  },\n  methods: {\n    removeNotification(timestamp) {\n      this.$NotificationsHechas.removeNotification(timestamp);\n    }\n  },\n  created() {\n    this.$NotificationsHechas.settings.overlap = this.overlap;\n  },\n  watch: {\n    overlap: function(newVal) {\n      this.$NotificationsHechas.settings.overlap = newVal;\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.NotificationsHechas {\n  .list-move {\n    transition: transform 0.3s, opacity 0.4s;\n  }\n  .list-item {\n    display: inline-block;\n    margin-right: 10px;\n  }\n  .list-enter-active {\n    transition: transform 0.2s ease-in, opacity 0.4s ease-in;\n  }\n  .list-leave-active {\n    transition: transform 1s ease-out, opacity 0.4s ease-out;\n  }\n\n  .list-enter {\n    opacity: 0;\n    transform: scale(1.1);\n  }\n  .list-leave-to {\n    opacity: 0;\n    transform: scale(1.2, 0.7);\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAqB;;;uBAAhCC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,YAAA,CASmBC,gBAAA;IATAC,IAAI,EAAEC,MAAA,CAAAC,cAAc;IACpBC,IAAI,EAAEF,MAAA,CAAAG;;sBAErB,MAA2C,E,kBAD7CR,mBAAA,CAMeS,SAAA,QAAAC,WAAA,CALUC,KAAA,CAAAC,mBAAmB,EAAnCC,YAAY;2BADrBC,YAAA,CAMeC,uBAAA,EANfC,WAAA,CAEUH,YAAY;QACnBI,YAAY,EAAEJ,YAAY,CAACK,OAAO;QAClCC,GAAG,EAAEN,YAAY,CAACO,SAAS,CAACC,OAAO;QACnCC,OAAK,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}