{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderSlot as _renderSlot, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = [\"data-color\", \"data-image\"];\nconst _hoisted_2 = {\n  class: \"sidebar-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"logo\"\n};\nconst _hoisted_4 = {\n  href: \"#\",\n  class: \"simple-text logo__container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logo-img\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"img/vue-logo.png\",\n  alt: \"\"\n})], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"nav nav-main__links\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"nav nav-bottom\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sidebar_link = _resolveComponent(\"sidebar-link\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"sidebar\",\n    style: _normalizeStyle($options.sidebarStyle),\n    \"data-color\": $props.backgroundColor,\n    \"data-image\": $props.backgroundImage\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"a\", _hoisted_4, [_hoisted_5, _createTextVNode(\" \" + _toDisplayString($props.title), 1 /* TEXT */)])]), _renderSlot(_ctx.$slots, \"content\"), _createElementVNode(\"ul\", _hoisted_6, [_createCommentVNode(\"By default vue-router adds an active class to each route link. This way the links are colored when clicked\"), _renderSlot(_ctx.$slots, \"default\", {}, () => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.sidebarLinks, (link, index) => {\n    return _openBlock(), _createBlock(_component_sidebar_link, {\n      key: link.name + index,\n      to: link.path,\n      onClick: _ctx.closeNavbar,\n      link: link\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"i\", {\n        class: _normalizeClass(link.icon)\n      }, null, 2 /* CLASS */), _createElementVNode(\"p\", null, _toDisplayString(link.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\", \"onClick\", \"link\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _ctx.$slots['bottom-links'] ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_7, [_renderSlot(_ctx.$slots, \"bottom-links\")])) : _createCommentVNode(\"v-if\", true)])], 12 /* STYLE, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["class","href","_createElementVNode","src","alt","_createElementBlock","style","_normalizeStyle","$options","sidebarStyle","$props","backgroundColor","backgroundImage","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","title","_renderSlot","_ctx","$slots","_hoisted_6","_createCommentVNode","_Fragment","_renderList","sidebarLinks","link","index","_createBlock","_component_sidebar_link","key","name","to","path","onClick","closeNavbar","_normalizeClass","icon","_hoisted_7"],"sources":["D:\\WEB\\Servicios\\Proyecto Final\\client\\src\\components\\SidebarPlugin\\SideBar.vue"],"sourcesContent":["<template>\n  <div class=\"sidebar\"\n       :style=\"sidebarStyle\"\n       :data-color=\"backgroundColor\"\n       :data-image=\"backgroundImage\">\n    <div class=\"sidebar-wrapper\">\n      <div class=\"logo\">\n        <a href=\"#\" class=\"simple-text logo__container\">\n            <div class=\"logo-img\">\n                <img src=\"img/vue-logo.png\" alt=\"\">\n            </div>\n          {{title}}\n        </a>\n      </div>\n\n      <slot name=\"content\"></slot>\n      <ul class=\"nav nav-main__links\">\n        <!--By default vue-router adds an active class to each route link. This way the links are colored when clicked-->\n        <slot>\n          <sidebar-link v-for=\"(link,index) in sidebarLinks\"\n                        :key=\"link.name + index\"\n                        :to=\"link.path\"\n                        @click=\"closeNavbar\"\n                        :link=\"link\">\n            <i :class=\"link.icon\"></i>\n            <p>{{link.name}}</p>\n          </sidebar-link>\n        </slot>\n      </ul>\n      <ul class=\"nav nav-bottom\" v-if=\"$slots['bottom-links']\">\n        <slot name=\"bottom-links\"></slot>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\n  import SidebarLink from './SidebarLink.vue'\n\n  export default {\n    components: {\n      SidebarLink\n    },\n    props: {\n      title: {\n        type: String,\n        default: 'Vue LBD'\n      },\n      backgroundColor: {\n        type: String,\n        default: 'black',\n        validator: (value) => {\n          let acceptedValues = ['', 'blue', 'azure', 'green', 'orange', 'red', 'purple', 'black']\n          return acceptedValues.indexOf(value) !== -1\n        }\n      },\n      backgroundImage: {\n        type: String,\n        default: 'img/sidebar-5.jpg'\n      },\n      activeColor: {\n        type: String,\n        default: 'success',\n        validator: (value) => {\n          let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger']\n          return acceptedValues.indexOf(value) !== -1\n        }\n      },\n      sidebarLinks: {\n        type: Array,\n        default: () => []\n      },\n      autoClose: {\n        type: Boolean,\n        default: true\n      }\n    },\n    provide () {\n      return {\n        autoClose: this.autoClose\n      }\n    },\n    computed: {\n      sidebarStyle () {\n        return {\n          backgroundImage: `url(${this.backgroundImage})`\n        }\n      }\n    }\n  }\n\n</script>\n<style>\n  .sidebar .sidebar-wrapper {\n    display: flex;\n    flex-direction: column;\n  }\n .sidebar .nav-main__links {\n   flex: 1;\n }\n .sidebar .sidebar-wrapper .logo .logo__container {\n   padding-left: 10px;\n }\n</style>\n"],"mappings":";;;EAKSA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAM;;EACZC,IAAI,EAAC,GAAG;EAACD,KAAK,EAAC;;gCACdE,mBAAA,CAEM;EAFDF,KAAK,EAAC;AAAU,I,aACjBE,mBAAA,CAAmC;EAA9BC,GAAG,EAAC,kBAAkB;EAACC,GAAG,EAAC;;;EAOtCJ,KAAK,EAAC;AAAqB;;;EAa3BA,KAAK,EAAC;;;;uBA5BdK,mBAAA,CAgCM;IAhCDL,KAAK,EAAC,SAAS;IACdM,KAAK,EAAAC,eAAA,CAAEC,QAAA,CAAAC,YAAY;IACnB,YAAU,EAAEC,MAAA,CAAAC,eAAe;IAC3B,YAAU,EAAED,MAAA,CAAAE;MAChBV,mBAAA,CA2BM,OA3BNW,UA2BM,GA1BJX,mBAAA,CAOM,OAPNY,UAOM,GANJZ,mBAAA,CAKI,KALJa,UAKI,GAJAC,UAEM,E,iBAAA,GACR,GAAAC,gBAAA,CAAEP,MAAA,CAAAQ,KAAK,iB,KAIXC,WAAA,CAA4BC,IAAA,CAAAC,MAAA,cAC5BnB,mBAAA,CAYK,MAZLoB,UAYK,GAXHC,mBAAA,8GAAiH,EACjHJ,WAAA,CASOC,IAAA,CAAAC,MAAA,iBATP,MASO,E,kBARLhB,mBAAA,CAOemB,SAAA,QAAAC,WAAA,CAPsBf,MAAA,CAAAgB,YAAY,GAA3BC,IAAI,EAACC,KAAK;yBAAhCC,YAAA,CAOeC,uBAAA;MANAC,GAAG,EAAEJ,IAAI,CAACK,IAAI,GAAGJ,KAAK;MACtBK,EAAE,EAAEN,IAAI,CAACO,IAAI;MACbC,OAAK,EAAEf,IAAA,CAAAgB,WAAW;MAClBT,IAAI,EAAEA;;wBACnB,MAA0B,CAA1BzB,mBAAA,CAA0B;QAAtBF,KAAK,EAAAqC,eAAA,CAAEV,IAAI,CAACW,IAAI;+BACpBpC,mBAAA,CAAoB,WAAAe,gBAAA,CAAfU,IAAI,CAACK,IAAI,iB;;;;sCAIaZ,IAAA,CAAAC,MAAM,oB,cAAvChB,mBAAA,CAEK,MAFLkC,UAEK,GADHpB,WAAA,CAAiCC,IAAA,CAAAC,MAAA,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}