{"ast":null,"code":"import { renderSlot as _renderSlot, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_createElementVNode(\"thead\", null, [_renderSlot(_ctx.$slots, \"columns\", {}, () => [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredColumns, column => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: column\n    }, _toDisplayString(column), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_renderSlot(_ctx.$slots, \"default\", {\n      row: item\n    }, () => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredColumns, column => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: column\n      }, _toDisplayString($options.itemValue(item, column)), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_renderSlot","_ctx","$slots","_Fragment","_renderList","$options","filteredColumns","column","key","_toDisplayString","filteredData","item","index","row","itemValue"],"sources":["D:\\WEB\\Servicios\\ProyectoFinal\\client\\src\\components\\TableVue.vue"],"sourcesContent":["<template>\n  <table class=\"table\">\n    <thead>\n      <slot name=\"columns\">\n        <tr>\n          <th v-for=\"column in filteredColumns\" :key=\"column\">{{ column }}</th>\n        </tr>\n      </slot>\n    </thead>\n    <tbody>\n      <tr v-for=\"(item, index) in filteredData\" :key=\"index\">\n        <slot :row=\"item\">\n          <td v-for=\"column in filteredColumns\" :key=\"column\">\n            {{ itemValue(item, column) }}\n          </td>\n        </slot>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script>\nexport default {\n  name: \"l-table\",\n  props: {\n    columns: Array,\n    data: Array,\n  },\n  methods: {\n    hasValue(item, column) {\n      return item[column.toLowerCase()] !== undefined;\n    },\n    itemValue(item, column) {\n      return item[column.toLowerCase()];\n    },\n  },\n  computed: {\n    filteredColumns() {\n      return this.columns.filter((column) =>\n        this.data.some((item) => this.hasValue(item, column))\n      );\n    },\n    filteredData() {\n      return this.data.filter((item) =>\n        this.filteredColumns.every((column) => this.hasValue(item, column))\n      );\n    },\n  },\n};\n</script>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAO;;uBAApBC,mBAAA,CAiBQ,SAjBRC,UAiBQ,GAhBNC,mBAAA,CAMQ,gBALNC,WAAA,CAIOC,IAAA,CAAAC,MAAA,iBAJP,MAIO,CAHLH,mBAAA,CAEK,c,kBADHF,mBAAA,CAAqEM,SAAA,QAAAC,WAAA,CAAhDC,QAAA,CAAAC,eAAe,EAAzBC,MAAM;yBAAjBV,mBAAA,CAAqE;MAA9BW,GAAG,EAAED;IAAM,GAAAE,gBAAA,CAAKF,MAAM;wCAInER,mBAAA,CAQQ,iB,kBAPNF,mBAAA,CAMKM,SAAA,QAAAC,WAAA,CANuBC,QAAA,CAAAK,YAAY,GAA5BC,IAAI,EAAEC,KAAK;yBAAvBf,mBAAA,CAMK;MANsCW,GAAG,EAAEI;IAAK,IACnDZ,WAAA,CAIOC,IAAA,CAAAC,MAAA;MAJAW,GAAG,EAAEF;IAAI,GAAhB,MAIO,E,kBAHLd,mBAAA,CAEKM,SAAA,QAAAC,WAAA,CAFgBC,QAAA,CAAAC,eAAe,EAAzBC,MAAM;2BAAjBV,mBAAA,CAEK;QAFkCW,GAAG,EAAED;MAAM,GAAAE,gBAAA,CAC7CJ,QAAA,CAAAS,SAAS,CAACH,IAAI,EAAEJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}