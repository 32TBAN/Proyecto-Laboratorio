{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_gmap_marker = _resolveComponent(\"gmap-marker\");\n  const _component_gmap_map = _resolveComponent(\"gmap-map\");\n  return _openBlock(), _createBlock(_component_gmap_map, {\n    id: \"map\",\n    center: $data.center,\n    zoom: 13,\n    options: $data.options,\n    \"map-type-id\": \"terrain\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_gmap_marker, {\n      position: $data.center\n    }, null, 8 /* PROPS */, [\"position\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"center\", \"options\"]);\n}","map":{"version":3,"names":["_createBlock","_component_gmap_map","id","center","$data","zoom","options","_createVNode","_component_gmap_marker","position"],"sources":["D:\\WEB\\Servicios\\ProyectoFinal\\client\\src\\pages\\Maps.vue"],"sourcesContent":["<template>\n  <gmap-map\n    id=\"map\"\n    :center=\"center\"\n    :zoom=\"13\"\n    :options=\"options\"\n    map-type-id=\"terrain\"\n  >\n    <gmap-marker :position=\"center\">\n    </gmap-marker>\n  </gmap-map>\n</template>\n<script>\n  import {API_KEY} from './Maps/API_KEY'\n  import Vue from 'vue'\n  import * as VueGoogleMaps from 'vue2-google-maps'\n  Vue.use(VueGoogleMaps, {\n    load: {\n      key: API_KEY\n    }\n  })\n  export default {\n    data () {\n      return {\n        center: {\n          lat: 40.748817,\n          lng: -73.985428\n        },\n        options: {\n          styles: [{\n            'featureType': 'water',\n            'stylers': [{'saturation': 43}, {'lightness': -11}, {'hue': '#0088ff'}]\n          }, {\n            'featureType': 'road',\n            'elementType': 'geometry.fill',\n            'stylers': [{'hue': '#ff0000'}, {'saturation': -100}, {'lightness': 99}]\n          }, {\n            'featureType': 'road',\n            'elementType': 'geometry.stroke',\n            'stylers': [{'color': '#808080'}, {'lightness': 54}]\n          }, {\n            'featureType': 'landscape.man_made',\n            'elementType': 'geometry.fill',\n            'stylers': [{'color': '#ece2d9'}]\n          }, {\n            'featureType': 'poi.park',\n            'elementType': 'geometry.fill',\n            'stylers': [{'color': '#ccdca1'}]\n          }, {\n            'featureType': 'road',\n            'elementType': 'labels.text.fill',\n            'stylers': [{'color': '#767676'}]\n          }, {\n            'featureType': 'road',\n            'elementType': 'labels.text.stroke',\n            'stylers': [{'color': '#ffffff'}]\n          }, {'featureType': 'poi', 'stylers': [{'visibility': 'off'}]}, {\n            'featureType': 'landscape.natural',\n            'elementType': 'geometry.fill',\n            'stylers': [{'visibility': 'on'}, {'color': '#b8cb93'}]\n          }, {'featureType': 'poi.park', 'stylers': [{'visibility': 'on'}]}, {\n            'featureType': 'poi.sports_complex',\n            'stylers': [{'visibility': 'on'}]\n          }, {'featureType': 'poi.medical', 'stylers': [{'visibility': 'on'}]}, {\n            'featureType': 'poi.business',\n            'stylers': [{'visibility': 'simplified'}]\n          }]\n        }\n      }\n    }\n  }\n</script>\n<style>\n  #map {\n    min-height: calc(100vh - 123px);\n  }\n</style>\n"],"mappings":";;;;uBACEA,YAAA,CASWC,mBAAA;IARTC,EAAE,EAAC,KAAK;IACPC,MAAM,EAAEC,KAAA,CAAAD,MAAM;IACdE,IAAI,EAAE,EAAE;IACRC,OAAO,EAAEF,KAAA,CAAAE,OAAO;IACjB,aAAW,EAAC;;sBAEZ,MACc,CADdC,YAAA,CACcC,sBAAA;MADAC,QAAQ,EAAEL,KAAA,CAAAD;IAAM,sC"},"metadata":{},"sourceType":"module","externalDependencies":[]}